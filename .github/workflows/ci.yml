name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  backend-spring-test:
    name: Backend Spring Boot Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
    
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.9.5
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run tests
      working-directory: ./backend-spring
      run: mvn test
    - name: Build application
      working-directory: ./backend-spring
      run: mvn clean package -DskipTests
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: spring-test-results
        path: backend-spring/target/surefire-reports/
        if-no-files-found: ignore
        retention-days: 7
    
    - name: Upload JAR artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: spring-jar
        path: backend-spring/target/*.jar
        retention-days: 7

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run tests
      working-directory: ./frontend
      run: npm run test
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/
        retention-days: 7

  deploy-backend-spring:
    name: Deploy Spring Boot to Render
    runs-on: ubuntu-latest
    needs: [backend-spring-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Render
      run: |
        curl -X POST "$RENDER_DEPLOY_HOOK_URL" \
          -H "Content-Type: application/json" \
          -d '{"branch": "main"}'
      env:
        RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
